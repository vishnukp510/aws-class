Create a test ec2-instance running under a VPC network with 3 subnets under it, 1 subnet having public ip enabled option.

Before that create an IAM user with full adminstrator previleages and configure it on your local machine.

AWS-CLi commands

1. Create VPC network

aws ec2 create-vpc --tag-specifications ResourceType=vpc,Tags='[{Key="Name",Value="vpc.vishnu.lab"}]' --cidr-block 10.0.0.0/16 --query Vpc.VpcId --output text

2.Create three subnets

aws ec2 create-subnet --tag-specifications ResourceType=subnet,Tags='[{Key="Name",Value="subnet.vishnu.lab"}]' --vpc-id vpc-04d9042560892c105 --cidr-block 10.0.0.0/18
aws ec2 create-subnet --tag-specifications ResourceType=subnet,Tags='[{Key="Name",Value="subnet2.vishnu.lab"}]' --vpc-id vpc-04d9042560892c105 --cidr-block 10.0.64.0/18
aws ec2 create-subnet --tag-specifications ResourceType=subnet,Tags='[{Key="Name",Value="subnet3.vishnu.lab"}]' --vpc-id vpc-04d9042560892c105 --cidr-block 10.0.128.0/18

3. Create a new internet gateway and attach it to the VPC

aws ec2 create-internet-gateway --tag-specifications ResourceType=internet-gateway,Tags='[{Key="Name",Value="igw.vishnu.lab"}]' --query InternetGateway.InternetGatewayId --output text
aws ec2 attach-internet-gateway --vpc-id vpc-04d9042560892c105 --internet-gateway-id igw-0d473f1ff8a063e42

4.Create route table

aws ec2 create-route-table --tag-specifications ResourceType=route-table,Tags='[{Key="Name",Value="rt.vishnu.lab"}]' --vpc-id vpc-04d9042560892c105 --query RouteTable.RouteTableId --output text

5. Add new route in rtb to use internet gateway
aws ec2 create-route --route-table-id rtb-08761b76133147ff1 --destination-cidr-block 0.0.0.0/0 --gateway-id igw-0d473f1ff8a063e42

6. Use the describe command to see if its properly attached to rtb.
aws ec2 describe-route-tables --route-table-id rtb-08761b76133147ff1

7. List out the subnet-ids and attach them to the rtb.

aws ec2 describe-subnets --filters "Name=vpc-id,Values=vpc-04d9042560892c105" --query "Subnets[*].{ID:SubnetId,CIDR:CidrBlock}"

aws ec2 associate-route-table  --subnet-id subnet-07b327b3d097d240c --route-table-id rtb-08761b76133147ff1
aws ec2 associate-route-table  --subnet-id subnet-0c32347ab0d7a34a3 --route-table-id rtb-08761b76133147ff1
aws ec2 associate-route-table  --subnet-id subnet-0d27baecf9d6a5c48 --route-table-id rtb-08761b76133147ff1

8. Enable the public ip option for the first subnet-id, (for attaching public ip for newly created instance)
aws ec2 modify-subnet-attribute --subnet-id subnet-07b327b3d097d240c --map-public-ip-on-launch

9.Create a key pair

aws ec2 create-key-pair --key-name cli_test_key --query "KeyMaterial" --output text > KeyPair.pem

10. Create a security group and add inbound rules.
aws ec2 create-security-group --group-name SSHAccess_awscli --description "Security group for SSH access" --vpc-id vpc-04d9042560892c105

aws ec2 authorize-security-group-ingress --group-id sg-0199590bff496929a --protocol tcp --port 22 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-id sg-0199590bff496929a --protocol tcp --port 80 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-id sg-0199590bff496929a --protocol tcp --port 443  --cidr 0.0.0.0

11.Create Ec2-instance
aws ec2 run-instances --image-id ami-01216e7612243e0ef --count 1 --instance-type t2.micro --key-name cli_test_key --security-group-ids sg-0199590bff496929a --subnet-id subnet-07b327b3d097d240c

12. check the status and public ip of the new instance

aws ec2 describe-instances --instance-id i-0dfc34fe77b8e2b1c --query "Reservations[*].Instances[*].{State:State.Name,Address:PublicIpAddress}"
